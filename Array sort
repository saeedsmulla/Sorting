/*Pseudocode
*selectionSort(array a)
*for i in 0 -> a.length - 2 do
*    minIndex = i
*   for j in (i + 1) -> (a.length - 1) do
*      if a[j] < a[minIndex]
*        minIndex = j
*      swap(a[i], a[minIndex])
*/
#include <stdio.h>
void swap(int *x, int *y) {
  int temp = *x;
  *x = *y;
  *y = temp;
}
void selectionSort(int arr[], int n) {
  int i, j, minIndex;
  for (i = 0; i < n - 1; i++) {    
    minIndex = i;
    for (j = i + 1; j < n; j++)
      if (arr[j] < arr[minIndex])
        minIndex = j;
    swap(&arr[minIndex], &arr[i]);
  }
}
void printArray(int arr[], int size) {
  int i;
  for (i = 0; i < size; i++)
    printf("%d ", arr[i]);
  printf("");
}
int main() {
  int arr[] = {9, 4, 2, 3, 6, 5, 7, 1, 8, 0};
  int n = sizeof(arr) / sizeof(arr[0]);
  printf("Original Array: \n");
  printArray(arr, n);
  selectionSort(arr, n);
  printf("\n\nSorted array: \n");
  printArray(arr, n);
  return 0;
}

/* Output:
*Original Array: 
* 9 4 2 3 6 5 7 1 8 0 
* Sorted array: 
* 0 1 2 3 4 5 6 7 8 9
*/
